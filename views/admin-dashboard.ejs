<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Time Attendance System</title>
    <link rel="stylesheet" href="/css/style.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
</head>
<body>
    <header>
        <h1>Time Attendance System</h1>
    </header>

    <!-- Sidebar -->
    <nav class="main-menu">
        <ul>
            <li>
                <a href="#" onclick="showSection('dashboard')">
                    <i class="fas fa-tachometer-alt"></i> <span>Dashboard</span>
                </a>
            </li>
            <li>
                <a href="#" onclick="showSection('report')">
                    <i class="fas fa-file-alt"></i> <span>Report</span>
                </a>
            </li>
            <li>
                <a href="#" onclick="showReport(); showSection('report')">
                    <i class="fas fa-sync-alt"></i> <span>Generate Report</span>
                </a>
            </li>
            <li>
              <a href="/logout">
                  <i class="fas fa-sign-out-alt"></i> <span>Logout</span>
              </a>
          </li>
        </ul>
    </nav>

    <!-- Area to trigger sidebar hover effect -->
    <div class="sidebar-hover-area"></div>

    <div id="content">
        <div id="dashboard" class="section">
            <h2>Admin Dashboard</h2>
            <p>Welcome to the admin panel!</p>
        </div>
        <h2>Dashboard Overview</h2>

        <div id="totalStudentsCard">
            <h3>Total Students Enrolled: <span id="totalStudents">0</span></h3>
        </div>
        
        <div class="card">
            <h3>Attendance Percentage: <span id="attendancePercentage">0%</span></h3>
        </div>
        
        <button id="javaButton">Java</button>
        <button id="pythonButton">Python</button>
    </div>

    <div id="report" class="section">
        <div id="reportContainer">
            <!-- Report content will be dynamically loaded here -->
        </div>
    </div>

    <script>
        // Fetch total student count
        $(document).ready(function() {
            $.get('/api/getStudentCount', function(data) {
                $('#totalStudents').text(data.totalStudents);
            }).fail(function() {
                console.error('Error fetching total student count');
            });

            // Fetch initial attendance percentage
            fetchAttendancePercentage(); // Call this function to fetch initial data

            // Fetch Java enrolled students
            $('#javaButton').click(function() {
                $.get('/api/getJavaEnrolledCount', function(data) {
                    $('#totalStudents').text(data.javaCount); // Update totalStudents card with Java count
                    fetchAttendancePercentage('Java'); // Fetch attendance percentage for Java
                }).fail(function() {
                    console.error('Error fetching Java enrolled count');
                });
            });

            // Fetch Python enrolled students
            $('#pythonButton').click(function() {
                $.get('/api/getPythonEnrolledCount', function(data) {
                    $('#totalStudents').text(data.pythonCount); // Update totalStudents card with Python count
                    fetchAttendancePercentage('Python'); // Fetch attendance percentage for Python
                }).fail(function() {
                    console.error('Error fetching Python enrolled count');
                });
            });
        });

        // Function to fetch attendance percentage
        function fetchAttendancePercentage(course) {
            $.get('/api/getAttendancePercentage', function(data) {
                $('#attendancePercentage').text(data.javaPercentage + '%'); // Default to Java
                if (course === 'Python') {
                    $('#attendancePercentage').text(data.pythonPercentage + '%'); // Update to Python if specified
                }
            }).fail(function() {
                console.error('Error fetching attendance percentages');
            });
        }

        // Function to show the report
        function showReport() {
            const reportContainer = document.getElementBy
            .getElementById('reportContainer');
            fetch('/generateReport')
            .then(response => response.text())
            .then(reportHtml => {
                reportContainer.innerHTML = reportHtml;
            })
            .catch(error => {
                reportContainer.innerHTML = '<p>Error loading report.</p>';
                console.error('Error fetching report:', error);
            });
        }

        // Function to show the active section
        function showSection(sectionId) {
            const sections = document.querySelectorAll('.section');
            sections.forEach(section => {
                section.classList.remove('active');
                section.style.display = 'none';
            });

            const activeSection = document.getElementById(sectionId);
            if (activeSection) {
                activeSection.classList.add('active');
                activeSection.style.display = 'block';
            }
        }

        // Add event listener for hovering the sidebar hover area
        const sidebar = document.querySelector('.main-menu');
        const hoverArea = document.querySelector('.sidebar-hover-area');
        
        hoverArea.addEventListener('mouseenter', () => {
            sidebar.classList.remove('collapsed');
        });

        sidebar.addEventListener('mouseenter', () => {
            sidebar.classList.remove('collapsed');
        });

        hoverArea.addEventListener('mouseleave', () => {
            sidebar.classList.add('collapsed');
        });

        sidebar.addEventListener('mouseleave', () => {
            sidebar.classList.add('collapsed');
        });

        window.onload = function() {
            fetch('/api/getStudentCount') // Ensure the endpoint matches your route
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    document.getElementById('totalStudents').innerText = data.totalStudents;
                })
                .catch(error => {
                    console.error('Error fetching total student count:', error);
                });
        };

        // Handle report generation form submission
        document.getElementById('reportForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Prevent the default form submission
            
            const fromDate = document.getElementById('fromDate').value;
            const toDate = document.getElementById('toDate').value;
    
            // AJAX request to fetch the report data
            fetch(`/api/generateReport?fromDate=${fromDate}&toDate=${toDate}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Display the report data
                    document.getElementById('reportSection').style.display = 'block';
                    const reportDataDiv = document.getElementById('reportData');
                    reportDataDiv.innerHTML = ''; // Clear previous data
    
                    // Check if data is available
                    if (data.length === 0) {
                        reportDataDiv.innerHTML = '<p>No attendance records found for this date range.</p>';
                    } else {
                        // Display attendance records
                        data.forEach(record => {
                            reportDataDiv.innerHTML += `
                                <p>${record.userId.name} (${record.userId.email}) joined on ${new Date(record.joinTime).toLocaleString()}</p>
                            `;
                        });
                    }
                })
                .catch(error => {
                    console.error('Error fetching report data:', error);
                    alert('Error fetching report data. Please try again later.');
                });
        });
    </script>
</body>
</html>