<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Time Attendance System</title>
    <link rel="stylesheet" href="/css/style.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
</head>
<body>
    <% if (typeof successMessage !== 'undefined') { %>
        <div class="alert alert-success">
            <%= successMessage %>
        </div>
    <% } %>
    <header>
        <h1>Time Attendance System</h1>
    </header>

    <!-- Sidebar -->
    <nav class="main-menu">
        <ul>
            <li>
                <a href="#" onclick="showSection('home')">
                    <i class="fas fa-home"></i> <span>Home</span>
                </a>
            </li>
            <li>
                <a href="#" onclick="showSection('dashboard')">
                    <i class="fas fa-tachometer-alt"></i> <span>Dashboard</span>
                </a>
            </li>
            <li>
                <a href="#" onclick="loadReport()">
                    <i class="fas fa-file-alt"></i> <span>Report</span>
                </a>
            </li>
        
            <li>
              <a href="/logout">
                  <i class="fas fa-sign-out-alt"></i> <span>Logout</span>
              </a>
          </li>
        </ul>
    </nav>

    <!-- Area to trigger sidebar hover effect -->
    <div class="sidebar-hover-area"></div>

    <div id="content">
        <div id="home" class="section active">
            <h1>Welcome to the TAS</h1>
        </div>

        <div id="dashboard" class="section" style="display: none;">
            <h2>Admin Dashboard</h2>
            <h2>Dashboard Overview</h2>
            <div id="totalStudentsCard" class="card">
                <h3>Total Students Enrolled: <span id="totalStudents">0</span></h3>
            </div>
            <div class="card">
                <h3>Attendance Percentage: <span id="attendancePercentage">0%</span></h3>
            </div>
            <button id="javaButton">Java</button>
            <button id="pythonButton">Python</button>
        </div>

        <div id="report" class="section" style="display: none;">
            <h2>Attendance Report</h2>
            <div>
                <!-- Buttons for downloading the report -->
                <button onclick="downloadCSV()" class="btn btn-primary">Download CSV</button>
            </div>
            <div id="reportContent"></div>
        </div>
    </div>

    <script>
        
        let reportData = []; // Global variable to store report data

        // Function to show the selected section
        function showSection(sectionId) {
            // Hide all sections
            document.querySelectorAll('.section').forEach(section => {
                section.style.display = 'none'; // Hide all sections
            });
            // Show the selected section
            document.getElementById(sectionId).style.display = 'block'; // Show the selected section

            // Load data for the dashboard if it's the dashboard section
            if (sectionId === 'dashboard') {
                loadDashboardData();
            }
        }

        function loadDashboardData() {
            // Fetch total student count
            fetch('/api/getStudentCount')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('totalStudents').innerText = data.totalStudents;
                })
                .catch(error => console.error('Error fetching total student count:', error));

            // Fetch attendance percentage
            fetch('/api/getAttendancePercentage')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('attendancePercentage').innerText = data.javaPercentage + '%'; // Default to Java
                })
                .catch(error => console.error('Error fetching attendance percentage:', error));
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Fetch Java enrolled students
            document.getElementById('javaButton').addEventListener('click', function() {
                fetch('/api/getJavaEnrolledCount')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('totalStudents').innerText = data.javaCount; // Update totalStudents card with Java count
                        fetchAttendancePercentage('Java'); // Fetch attendance percentage for Java
                    })
                    .catch(error => {
                        console.error('Error fetching Java enrolled count:', error);
                    });
            });
        
            // Fetch Python enrolled students
            document.getElementById('pythonButton').addEventListener('click', function() {
                fetch('/api/getPythonEnrolledCount')
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById('totalStudents').innerText = data.pythonCount; // Update totalStudents card with Python count
                        fetchAttendancePercentage('Python'); // Fetch attendance percentage for Python
                    })
                    .catch(error => {
                        console.error('Error fetching Python enrolled count:', error);
                    });
            });
        });
        
        // Function to fetch attendance percentage
        function fetchAttendancePercentage(course) {
            fetch('/api/getAttendancePercentage')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('attendancePercentage').innerText = data.javaPercentage + '%'; // Default to Java
                    if (course === 'Python') {
                        document.getElementById('attendancePercentage').innerText = data.pythonPercentage + '%'; // Update to Python if specified
                    }
                })
                .catch(error => {
                    console.error('Error fetching attendance percentages:', error);
                });
        }

        // Function to fetch attendance percentage
        function fetchAttendancePercentage(course) {
            fetch('/api/getAttendancePercentage')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('attendancePercentage').innerText = data.javaPercentage + '%'; // Default to Java
                    if (course === 'Python') {
                        document.getElementById('attendancePercentage').innerText = data.pythonPercentage + '%'; // Update to Python if specified
                    }
                })
                .catch(error => {
                    console.error('Error fetching attendance percentages:', error);
                });
        }

        function loadReport() {
            fetch('/api/report') // Ensure this endpoint is correct
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    // Store the report data globally
                    reportData = data;

                    // Clear the current report content
                    const reportContent = document.getElementById('reportContent');
                    reportContent.innerHTML = '';

                    // Create a table to display the report
                    let reportTable = '<table class="report-table"><caption>Attendance Report</caption><thead><tr><th>Index</th><th>Date</th><th>Student Name</th><th>Email Address</th><th>Course Enrolled</th><th>Lecture Join Time</th><th>Lecture Leave Time</th><th>Attendance Status</th></tr></thead><tbody>';

                    data.forEach(record => {
                        reportTable += `<tr>
                            <td>${record.index}</td>
                            <td>${new Date(record.date).toLocaleDateString()}</td> <!-- Format date -->
                            <td>${record.studentName}</td>
                            <td>${record.emailAddress}</td>
                            <td>${record.courseEnrolled}</td>
                            <td>${record.lectureJoinTime ? new Date(record.lectureJoinTime).toLocaleTimeString() : 'N/A'}</td> <!-- Format time -->
                            <td>${record.lectureLeaveTime ? new Date(record.lectureLeaveTime).toLocaleTimeString() : 'N/A'}</td> <!-- Format time -->
                            <td>${record.attendanceStatus}</td>
                        </tr>`;
                    });

                    reportTable += '</tbody></table>';

                    // Append the report table to the report content area
                    reportContent.innerHTML = reportTable;

                    // Show the report section
                    showSection('report');
                })
                .catch(error => {
                    console.error('Error fetching report:', error);
                    document.getElementById('reportContent').innerHTML = '<p>Error loading report. Please try again later.</p>';
                });
        }

        // Function to download report as CSV
        function downloadCSV() {
            const csvRows = [];
            const headers = ['Index', 'Date', 'Student Name', 'Email Address', 'Course Enrolled', 'Lecture Join Time', 'Lecture Leave Time', 'Attendance Status'];
            csvRows.push(headers.join(','));

            reportData.forEach(record => {
                const row = [
                    record.index,
                    new Date(record.date).toLocaleDateString(),
                    record.studentName,
                    record.emailAddress,
                    record.courseEnrolled,
                    record.lectureJoinTime ? new Date(record.lectureJoinTime).toLocaleTimeString() : 'N/A',
                    record.lectureLeaveTime ? new Date(record.lectureLeaveTime).toLocaleTimeString() : 'N/A',
                    record.attendanceStatus
                ];
                csvRows.push(row.join(','));
            });

            const csvString = csvRows.join('\n');
            const blob = new Blob([csvString], { type: 'text /csv;charset=utf-8;' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.setAttribute('href', url);
            a.setAttribute('download', 'attendance_report.csv');
            a.click();
            URL.revokeObjectURL(url);
        }

    
        document.addEventListener('DOMContentLoaded', function() {
            // Show the home section by default on page load
            showSection('home');

            // Add event listener for hovering the sidebar hover area
            const sidebar = document.querySelector('.main-menu');
            const hoverArea = document.querySelector('.sidebar-hover-area');
            
            hoverArea.addEventListener('mouseenter', () => {
                sidebar.classList.remove('collapsed');
            });
        
            sidebar.addEventListener('mouseenter', () => {
                sidebar.classList.remove('collapsed');
            });
        
            hoverArea.addEventListener('mouseleave', () => {
                sidebar.classList.add('collapsed');
            });
            sidebar.addEventListener('mouseleave', () => {
                sidebar.classList.add('collapsed');
            });
        });
    </script>
</body>
</html>